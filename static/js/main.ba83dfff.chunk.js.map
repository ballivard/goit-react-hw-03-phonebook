{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/Contact.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","styles","map","contact","ContactList_item","name","number","ContactList_button","type","onClick","id","Filter","value","onChangeFilter","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","ContactEditor","onSubmit","this","ContactEditor_label","ContactEditor_input","ContactEditor_button","Component","App","filter","addContact","task","cont","includes","alert","length","shortid","generate","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba83dfff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__37CPC\",\"ContactList_item\":\"ContactList_ContactList_item__WWcVK\",\"completed\":\"ContactList_completed__AZPR4\",\"ContactList_text\":\"ContactList_ContactList_text__1Xt6Q\",\"ContactList_actions\":\"ContactList_ContactList_actions__2x6zp\",\"ContactList_button\":\"ContactList_ContactList_button__3AX0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactEditor\":\"Contact_ContactEditor__2bAlK\",\"ContactEditor_label\":\"Contact_ContactEditor_label__1mjZc\",\"ContactEditor_input\":\"Contact_ContactEditor_input__3w_OD\",\"ContactEditorinput\":\"Contact_ContactEditorinput__3sn6l\",\"ContactEditor_button\":\"Contact_ContactEditor_button__MOzE9\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.ContactList}>\n    {contacts.map((contact) => (\n      <li className={styles.ContactList_item} key={contact.id}>\n        {contact.name + \":\" + contact.number}\n        {\n          <button\n            className={styles.ContactList_button}\n            type=\"button\"\n            name=\"delte\"\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onchangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Contact.module.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form className={styles.ContactEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.ContactEditor_label}>\n          Name\n          <input\n            className={styles.ContactEditor_input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.ContactEditor_label}>\n          Number\n          <input\n            className={styles.ContactEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.ContactEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    if (contacts) {\n      this.setState({ contacts: JSON.parse(contacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n  \n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: shortid.generate(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"Container\">\n        <div className=\"Container2\">\n          <h1>Phonebook</h1>\n\n          <ContactForm onAddContact={this.addContact} />\n          <h2>Contacts</h2>\n          {visibleContacts.length > 1 && (\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n          )}\n          {visibleContacts.length > 0 && (\n            <ContactList\n              contacts={visibleContacts}\n              onRemoveContact={this.removeContact}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}